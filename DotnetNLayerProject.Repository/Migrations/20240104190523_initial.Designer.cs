// <auto-generated />
using System;
using DotnetNLayerProject.Repository;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DotnetNLayerProject.Repository.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20240104190523_initial")]
    partial class initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.25")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("DotnetNLayerProject.Core.Models.Blog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("BlogContent")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BlogTitle")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("CategoryID")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("WriterID")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CategoryID");

                    b.HasIndex("WriterID");

                    b.ToTable("Blogs");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BlogContent = "Git Nedir ?Git, bir versiyon kontrol sistemi olarak bilinen açık kaynaklı bir yazılımdır ve genellikle yazılım geliştirme süreçlerinde kullanılır. Git, proje dosyalarının değişikliklerini takip etmeye, farklı sürümleri yönetmeye ve işbirliği yapmaya olanak tanır.Git, Linux kurucusu Linus Torvalds tarafından geliştirilen bir versiyon kontrol sistemidir. Linux çekirdeğinin farklı developer’lar tarafından geliştirilmesi konusu git’in ortaya çıkmasını sağlamıştır.",
                            BlogTitle = "Git Versiyon Kontrol Sistemi",
                            CategoryID = 1,
                            CreatedDate = new DateTime(2024, 1, 4, 22, 5, 23, 69, DateTimeKind.Local).AddTicks(6034),
                            WriterID = 1
                        },
                        new
                        {
                            Id = 2,
                            BlogContent = "Katmanlar sorumlulukların ayrılması ve bağımlılıkların yönetilmesi için kullanılan bir yöntemdir. Her katmanın belirli bir sorumluluğu vardır. Daha yüksek bir katman, hizmetleri daha düşük bir katmanda kullanabilir ancak daha düşük bir katman, hizmetleri daha yüksek bir katmanda kullanamaz.",
                            BlogTitle = "N Katmanlı Mimari",
                            CategoryID = 2,
                            CreatedDate = new DateTime(2024, 1, 4, 22, 5, 23, 69, DateTimeKind.Local).AddTicks(6045),
                            WriterID = 2
                        },
                        new
                        {
                            Id = 3,
                            BlogContent = "Bu sayıda alanında uzman yirmi iki kişinin görüşlerini okuyacaksınız. Bu sene kamuoyunun nabzını da yoklayarak yazarlarımız için iki dönem kuralı getirdim. Yani ilk iki sayıda da katkı sağlayan yazarlarımız bu sayıda yer almadı. Bunun yanında geçen sayıda bulunup bu sene müsait olamayan veya trendleri yeterince takip edemediğini düşünen yazarlarımız da bu sayıda yer almadı. Yeri gelmişken bu sayıda da sadece iki kadın yazılımcı, yazar olarak yer aldı. Ayrıca iki arkadaş son haftalardaki bazı aksilikler dolayısıyla yazı gönderemedi.",
                            BlogTitle = "Yazılım Dünyasında 2023 Trendleri",
                            CategoryID = 3,
                            CreatedDate = new DateTime(2024, 1, 4, 22, 5, 23, 69, DateTimeKind.Local).AddTicks(6046),
                            WriterID = 3
                        });
                });

            modelBuilder.Entity("DotnetNLayerProject.Core.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryName = "Teknoloji",
                            CreatedDate = new DateTime(2024, 1, 4, 22, 5, 23, 69, DateTimeKind.Local).AddTicks(6227)
                        },
                        new
                        {
                            Id = 2,
                            CategoryName = "Yazılım",
                            CreatedDate = new DateTime(2024, 1, 4, 22, 5, 23, 69, DateTimeKind.Local).AddTicks(6229)
                        },
                        new
                        {
                            Id = 3,
                            CategoryName = "Trendler",
                            CreatedDate = new DateTime(2024, 1, 4, 22, 5, 23, 69, DateTimeKind.Local).AddTicks(6230)
                        });
                });

            modelBuilder.Entity("DotnetNLayerProject.Core.Models.Writer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("WriterMail")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("WriterName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("WriterPassword")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.HasKey("Id");

                    b.ToTable("Writers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2024, 1, 4, 22, 5, 23, 69, DateTimeKind.Local).AddTicks(6390),
                            WriterMail = "feyza@gmail.com",
                            WriterName = "Feyza Bakır",
                            WriterPassword = "feyza123"
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(2024, 1, 4, 22, 5, 23, 69, DateTimeKind.Local).AddTicks(6391),
                            WriterMail = "aysecinar@gmail.com",
                            WriterName = "Ayşe Çınar",
                            WriterPassword = "ayse123"
                        },
                        new
                        {
                            Id = 3,
                            CreatedDate = new DateTime(2024, 1, 4, 22, 5, 23, 69, DateTimeKind.Local).AddTicks(6392),
                            WriterMail = "aliyilmaz@gmail.com",
                            WriterName = "Ali Yılmaz",
                            WriterPassword = "ali123"
                        });
                });

            modelBuilder.Entity("DotnetNLayerProject.Core.Models.Blog", b =>
                {
                    b.HasOne("DotnetNLayerProject.Core.Models.Category", "Category")
                        .WithMany("Blogs")
                        .HasForeignKey("CategoryID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DotnetNLayerProject.Core.Models.Writer", "Writer")
                        .WithMany("Blogs")
                        .HasForeignKey("WriterID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("Writer");
                });

            modelBuilder.Entity("DotnetNLayerProject.Core.Models.Category", b =>
                {
                    b.Navigation("Blogs");
                });

            modelBuilder.Entity("DotnetNLayerProject.Core.Models.Writer", b =>
                {
                    b.Navigation("Blogs");
                });
#pragma warning restore 612, 618
        }
    }
}
